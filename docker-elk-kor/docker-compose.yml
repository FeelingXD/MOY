version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: password
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
  logstash:
    build:
      context: logstash
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      DATABASE: $DATABASE
      TABLE: $TABLE
      MYSQL_USER: $MYSQL_ROOT_USER
      MYSQL_PASSWORD: $MYSQL_ROOT_PASSWORD
      INDEX_NAME: $INDEX_NAME
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: kibana
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  mysql:
    image: mysql
    ports:
      - "3306:3306"
    networks:
      - elk
    environment:
      MYSQL_ROOT_PASSWORD : $MYSQL_ROOT_PASSWORD
    container_name: mysql
  api:
    build:
      context: api
      args:
        MOY_VERSION: $MOY_VERSION
    ports:
      - "8080:8080"
    networks:
      - elk
    environment:
      DATABASE_CONTAINER: $DATABASE_CONTAINER
      DATABASE_TABLE: $DATABASE_TABLE
      REDIS_HOST: $REDIS_CONTAINER
      CLOVA_ID: $CLOVA_ID
      CLOVA_SECRET: $CLOVA_SECRET
      ELASTIC_CONTAINER: $ELASTIC_CONTAINER
      USE_PROFILE: $USE_PROFILE
    depends_on: 
      - mysql
      - elasticsearch
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - elk
    container_name: redis
    
networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
